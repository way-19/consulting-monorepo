const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'http://127.0.0.1:54321';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0';

async function testAdminAuth() {
  console.log('üîê Admin kimlik doƒürulama testi ba≈ülƒ±yor...\n');
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  try {
    // Sign in as admin
    console.log('üë§ Admin olarak giri≈ü yapƒ±lƒ±yor...');
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'admin@consulting19.com',
      password: 'admin123'
    });
    
    if (authError) {
      console.error('‚ùå Giri≈ü hatasƒ±:', authError.message);
      return;
    }
    
    console.log('‚úÖ Giri≈ü ba≈üarƒ±lƒ±!');
    console.log('üîë User ID:', authData.user.id);
    console.log('üìß Email:', authData.user.email);
    console.log('üé´ Access Token:', authData.session.access_token.substring(0, 50) + '...');
    
    // Test auth/v1/user endpoint
    console.log('\nüîç auth/v1/user endpoint test ediliyor...');
    const { data: userData, error: userError } = await supabase.auth.getUser();
    
    if (userError) {
      console.error('‚ùå User endpoint hatasƒ±:', userError.message);
    } else {
      console.log('‚úÖ User endpoint ba≈üarƒ±lƒ±!');
      console.log('üë§ User data:', {
        id: userData.user.id,
        email: userData.user.email,
        email_confirmed_at: userData.user.email_confirmed_at
      });
    }
    
    // Test user_profiles query
    console.log('\nüîç user_profiles query test ediliyor...');
    const { data: profileData, error: profileError } = await supabase
      .from('user_profiles')
      .select('*')
      .eq('id', authData.user.id)
      .single();
    
    if (profileError) {
      console.error('‚ùå Profile query hatasƒ±:', profileError.message);
      console.error('‚ùå Profile error details:', profileError);
    } else {
      console.log('‚úÖ Profile query ba≈üarƒ±lƒ±!');
      console.log('üë§ Profile data:', {
        id: profileData.id,
        email: profileData.email,
        full_name: profileData.full_name,
        role: profileData.role,
        is_active: profileData.is_active
      });
    }
    
    // Test admin access to all profiles
    console.log('\nüîç Admin t√ºm profillere eri≈üim test ediliyor...');
    const { data: allProfiles, error: allProfilesError } = await supabase
      .from('user_profiles')
      .select('id, email, full_name, role');
    
    if (allProfilesError) {
      console.error('‚ùå All profiles query hatasƒ±:', allProfilesError.message);
      console.error('‚ùå All profiles error details:', allProfilesError);
    } else {
      console.log('‚úÖ All profiles query ba≈üarƒ±lƒ±!');
      console.log('üìä Toplam profil sayƒ±sƒ±:', allProfiles.length);
      allProfiles.forEach((profile, index) => {
        console.log(`üë§ Profil ${index + 1}:`, {
          id: profile.id,
          email: profile.email,
          full_name: profile.full_name,
          role: profile.role
        });
      });
    }
    
  } catch (error) {
    console.error('‚ùå Beklenmeyen hata:', error.message);
  }
}

testAdminAuth();